@model ChangePasswordVm

@{
    ViewData["Title"] = "Change Password";
}

<div class="container-fluid">
    <!-- ========== title-wrapper start ========== -->
    <div class="title-wrapper pt-30">
        <div class="row align-items-center">
            <div class="col-md-6">
                <div class="title mb-30">
                    <h2>Change Password</h2>
                </div>
            </div>
            <!-- end col -->
            <div class="col-md-6">
                <div class="breadcrumb-wrapper mb-30">
              
                </div>
            </div>
            <!-- end col -->
        </div>
        <!-- end row -->
    </div>
    <!-- ========== title-wrapper end ========== -->

    <div class="form-elements-wrapper">
        <form asp-action="ChangePassword">
            <div class="card-style mb-30">
                <div class="input-style-1">
                    <label>Old Password</label>
                    <input type="password" placeholder="Old Password" asp-for="OldPassword" />
                    <span class="text-danger" asp-validation-for="OldPassword"></span>
                </div>
                <div class="input-style-1">
                    <label>New Password</label>
                    <input type="password" placeholder="New Password" asp-for="NewPassword" />
                    <span class="text-danger" asp-validation-for="NewPassword"></span>
                </div>
                <div class="input-style-1">
                    <label>Confirm Password</label>
                    <input type="password" placeholder="Confirm Password" asp-for="ConfirmPassword" />
                    <span class="text-danger" asp-validation-for="ConfirmPassword"></span>

                </div>
            </div>
            <button class="main-btn primary-btn square-btn btn-hover">Save</button>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}